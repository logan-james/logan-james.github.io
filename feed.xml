<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://logan-james.github.io//feed.xml" rel="self" type="application/atom+xml"/><link href="https://logan-james.github.io//" rel="alternate" type="text/html" hreflang="en"/><updated>2024-04-20T22:42:16+00:00</updated><id>https://logan-james.github.io//feed.xml</id><title type="html">blank</title><subtitle>Logan James&apos;s homepage. </subtitle><entry><title type="html">a post with pseudo code</title><link href="https://logan-james.github.io//blog/2024/pseudocode/" rel="alternate" type="text/html" title="a post with pseudo code"/><published>2024-04-15T00:01:00+00:00</published><updated>2024-04-15T00:01:00+00:00</updated><id>https://logan-james.github.io//blog/2024/pseudocode</id><content type="html" xml:base="https://logan-james.github.io//blog/2024/pseudocode/"><![CDATA[<p>This is an example post with some pseudo code rendered by <a href="https://github.com/SaswatPadhi/pseudocode.js">pseudocode</a>. The example presented here is the same as the one in the <a href="https://saswat.padhi.me/pseudocode.js/">pseudocode.js</a> documentation, with only one simple but important change: everytime you would use <code class="language-plaintext highlighter-rouge">$</code>, you should use <code class="language-plaintext highlighter-rouge">$$</code> instead. Also, note that the <code class="language-plaintext highlighter-rouge">pseudocode</code> key in the front matter is set to <code class="language-plaintext highlighter-rouge">true</code> to enable the rendering of pseudo code. As an example, using this code:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">pseudocode
</span><span class="sb">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Generates:</p> <pre><code class="language-pseudocode">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included pseudo code could look like]]></summary></entry><entry><title type="html">OverTheWire Bandit 0</title><link href="https://logan-james.github.io//blog/2024/OTWb0/" rel="alternate" type="text/html" title="OverTheWire Bandit 0"/><published>2024-02-22T00:00:00+00:00</published><updated>2024-02-22T00:00:00+00:00</updated><id>https://logan-james.github.io//blog/2024/OTWb0</id><content type="html" xml:base="https://logan-james.github.io//blog/2024/OTWb0/"><![CDATA[ <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/overthewirelogo.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="introduction-to-ssh">Introduction to SSH</h2> <p>Secure Shell (SSH) is an encrypted protocol used to connect to remote servers securely. The fundamental benefit of SSH is its robust security, which includes encryption to prevent sensitive data from being exposed to network traffic analysis.</p> \[\text{SSH Encryption Formula: } E_K(M) = C\] <p>Where:</p> <ul> <li>(E_K) is the encryption function</li> <li>(M) is the plain message</li> <li>(C) is the ciphered message</li> <li>(K) is the secret key</li> </ul> <hr/> <h2 id="accessing-bandit-level-0">Accessing Bandit Level 0</h2> <p>The primary task in Bandit Level 0 is to connect to the Bandit game server using SSH. This introductory level is designed to teach the basics of making an SSH connection. Here’s how you can connect:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh bandit0@bandit.labs.overthewire.org <span class="nt">-p</span> 2220
</code></pre></div></div> <p>Password for bandit0: <strong>bandit0</strong></p> <p>This command initiates an <em>SSH</em> connection to <a href="https://overthewire.org/wargames/bandit/">bandit.labs.overthewire.org</a> on port 2220, logging in as the user <code class="language-plaintext highlighter-rouge">bandit0</code>.</p> <hr/> <h2 id="secure-shell-overview">Secure Shell Overview</h2> <p>Secure Shell (SSH) is a cornerstone of secure network operations, ensuring encrypted communications between devices. For in-depth technical details, refer to the original SSH RFCs, like RFC 4253, which outline the protocol’s architecture and operation mechanisms.</p> <p>Secure Shell (SSH) is a cryptographic network protocol designed for secure communication over an unsecured network. It is widely used by network administrators to control web and other types of servers remotely. SSH provides a secure channel over an insecure network by using a client-server model, connecting an SSH client application with an SSH server. The protocol specifies how to encrypt the data being sent, ensuring that both the identity of the client and the integrity of the data are protected from unauthorized access or interception. Notably, SSH uses public-key cryptography to authenticate the remote computer and allow the remote computer to authenticate the user, if necessary. This feature distinguishes SSH from other remote administration tools, such as Telnet, which transmit passwords in plaintext and are vulnerable to interception.</p> <hr/> <h2 id="key-components-of-ssh">Key Components of SSH</h2> <p>Understanding the fundamental components of Secure Shell (SSH) is essential for leveraging its capabilities effectively. This section delves into the key elements that constitute SSH and how they contribute to its robust security model.</p> <p>At its core, SSH relies on cryptographic principles to establish secure communication channels over potentially insecure networks. One of the primary components of SSH is its encryption mechanism, which ensures that data transmitted between the client and server remains confidential and tamper-proof. By encrypting data, SSH protects sensitive information from unauthorized access or interception by malicious actors.</p> <p>Another crucial aspect of SSH is its authentication framework, which provides a means of verifying the identities of both the client and the server. Unlike traditional methods like Telnet<d-footnote>Telnet was exploited by attackers intercepting and capturing plaintext passwords transmitted over the network In 2000s worm known as "Lion" targeted this vulnerability.</d-footnote>, which rely on plaintext passwords, SSH employs public-key cryptography for authentication. This method significantly enhances security by eliminating the risk of password interception and brute-force attacks.</p> <p>Furthermore, SSH operates within a client-server architecture, where the SSH client initiates a connection with the SSH server. This model facilitates remote administration and enables administrators to securely access and manage servers from remote locations.</p> <p>In addition to encryption and authentication, SSH also incorporates mechanisms for session multiplexing and port forwarding, enhancing its versatility and utility in various network environments. These features allow users to establish multiple secure connections over a single SSH session and securely tunnel traffic between different network endpoints.</p> <p>By integrating these key components, SSH establishes a robust framework for secure remote communication and administration, making it an indispensable tool for network administrators and IT professionals alike.</p> <hr/> <h2 id="generating-ssh-key-pair">Generating SSH Key Pair</h2> <p>To further your understanding of SSH, here’s an example of how to generate a public/private key pair, which is a critical part of SSH’s secure authentication process:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh-keygen <span class="nt">-t</span> rsa <span class="nt">-b</span> 4096 <span class="nt">-C</span> <span class="s2">"your_email@example.com"</span>
</code></pre></div></div> <p>This command generates a new RSA key pair, which enhances security by using a 4096-bit key size.</p> <hr/> <h2 id="harnessing-the-power-of-ssh-commands">Harnessing the Power of SSH Commands</h2> <p>SSH not only secures communications but also supports a range of commands that facilitate remote system management. Below are some common SSH commands and their uses:</p> <ul> <li><strong><code class="language-plaintext highlighter-rouge">ssh</code></strong>: Connect to a remote host.</li> <li><strong><code class="language-plaintext highlighter-rouge">ssh-copy-id</code></strong>: Install your public key in a remote machine’s <code class="language-plaintext highlighter-rouge">authorized_keys</code>.</li> <li><strong><code class="language-plaintext highlighter-rouge">ssh-add</code></strong>: Add private key identities to the authentication agent.</li> <li><strong><code class="language-plaintext highlighter-rouge">sftp</code></strong>: Secure file transfer program.</li> <li><strong><code class="language-plaintext highlighter-rouge">scp</code></strong>: Secure copy (remote file copy program).</li> </ul> <blockquote> <p>“SSH is pivotal in today’s digital security landscape, providing the backbone for secure remote operations.” — Jane Doe, Cybersecurity Expert</p> </blockquote> <hr/> <h2 id="ssh-operations">SSH Operations</h2> <p>SSH offers a plethora of functionalities beyond secure communication. Here’s a breakdown of essential SSH commands and their purposes:</p> <figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="c"># Generating SSH Key Pair</span>

ssh-keygen <span class="nt">-t</span> rsa <span class="nt">-b</span> 4096 <span class="nt">-C</span> <span class="s2">"your_email@example.com"</span>

<span class="c"># Connecting to a Remote Host</span>

ssh username@hostname

<span class="c"># Copying Public Key to Remote Machine</span>

ssh-copy-id username@hostname

<span class="c"># Adding Private Key to SSH Agent</span>

ssh-add ~/.ssh/id_rsa

<span class="c"># Using Secure FIle Transfer (SFTP)</span>

sftp username@hostname

<span class="c"># Securely Copying Files (SCP)</span>

scp file.txt username@hostname:/remote/directory</code></pre></figure> <details><summary>Click here to know more</summary> <ul> <li><strong>Generating SSH Key Pair</strong> This command generates a new RSA key pair with a specified bit length, enhancing security for authentication purposes. The -t flag specifies the key type (RSA), -b sets the key length to 4096 bits, and -C adds a comment to the key, typically an email address.</li> <li><strong>Connecting to a Remote Host</strong> Use this command to establish a secure shell connection to a remote host. Replace username with your username on the remote machine and hostname with the IP address or domain name of the host.</li> <li><strong>Copying Public Key to Remote Machine</strong> This command copies your public SSH key to the authorized_keys file on a remote machine, allowing you to authenticate without a password. It simplifies the process of setting up passwordless SSH access.</li> <li><strong>Adding Private Key to SSH Agent</strong> The SSH agent stores private keys used for authentication, eliminating the need to enter passwords for every SSH connection. This command adds the specified private key to the SSH agent, enabling seamless authentication.</li> <li><strong>Using Secure File Transfer (SFTP)</strong> SFTP provides a secure method for transferring files between local and remote systems. It operates over the SSH protocol, ensuring data confidentiality and integrity during file transfer.</li> <li><strong>Securely Copying Files (SCP)</strong> SCP securely copies files between hosts over an SSH connection. Simply specify the file to copy (file.txt), the remote username, hostname, and destination directory on the remote machine.</li> </ul> <hr/> <p><em>These commands empower you to efficiently manage remote systems and securely transfer files, bolstering your proficiency in SSH operations.</em></p> </details>]]></content><author><name></name></author><category term="Security"/><category term="OverTheWire"/><category term="Bandit"/><category term="CTF"/><category term="Security"/><category term="Linux"/><summary type="html"><![CDATA[Lvl 0 - SSH]]></summary></entry><entry><title type="html">OverTheWire Bandit 0 → Level 1</title><link href="https://logan-james.github.io//blog/2024/OTWb0-1/" rel="alternate" type="text/html" title="OverTheWire Bandit 0 → Level 1"/><published>2024-02-22T00:00:00+00:00</published><updated>2024-02-22T00:00:00+00:00</updated><id>https://logan-james.github.io//blog/2024/OTWb0-1</id><content type="html" xml:base="https://logan-james.github.io//blog/2024/OTWb0-1/"><![CDATA[<div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/OverTheWirelvl1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Terminal logo you'll see </div> <p>Welcome to the OverTheWire Bandit series! In this walkthrough, we’ll guide you through solving Level 0 and progressing to Level 1. Let’s dive in! <a href="https://overthewire.org/wargames/bandit/bandit1.html">OverTheWire - Bandit</a></p> <h2 id="level-goal">Level Goal</h2> <p>The goal of Bandit Level 0 is to find the password for Level 1, which is stored in a file named <code class="language-plaintext highlighter-rouge">readme</code> located in the home directory.</p> <h2 id="commands-for-this-level">Commands for this level</h2> <ul> <li><a href="https://man7.org/linux/man-pages/man1/ls.1.html">ls</a> list directory contents</li> <li><a href="https://man7.org/linux/man-pages/man1/cd.1p.html">cd</a> change the working directory</li> <li><a href="https://man7.org/linux/man-pages/man1/cat.1.html">cat</a> concatenate files and print on the standard output</li> <li><a href="https://man7.org/linux/man-pages/man1/file.1.html">file</a> determine file type</li> <li><a href="https://man7.org/linux/man-pages/man1/du.1.htmlu">du</a> estimate file space usage</li> <li><a href="https://man7.org/linux/man-pages/man1/find.1.html">find</a> search for files in a directory hierarchy</li> </ul> <h2 id="connecting-to-bandit0">Connecting to Bandit0</h2> <p>First, let’s connect to the Bandit Level 0 server using SSH. Open your terminal and run the following command:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh bandit0@bandit.labs.overthewire.org <span class="nt">-p</span> 2220
</code></pre></div></div> <p>You will be prompted to enter the password for Level 0, which is also <code class="language-plaintext highlighter-rouge">bandit0</code>.</p> <h2 id="locating-the-readme-file">Locating the Readme File</h2> <p>Once logged in, you’ll find yourself in the home directory (<code class="language-plaintext highlighter-rouge">/home/bandit0</code>). Let’s list the files in the directory using the <code class="language-plaintext highlighter-rouge">ls</code> command:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">ls</span>
</code></pre></div></div> <p>You should see <code class="language-plaintext highlighter-rouge">readme</code>.</p> <h2 id="reading-the-readme-file">Reading the readme file</h2> <p>To view the contents of the <code class="language-plaintext highlighter-rouge">readme</code> file, use the <code class="language-plaintext highlighter-rouge">cat</code> command.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat </span>readme
</code></pre></div></div> <p>This will display the password for Level 1 on the terminal.</p> <h2 id="ssh-into-bandit1">SSH into Bandit1</h2> <p>Now you have the pw for Level 1, <strong>ssh</strong> into the next level.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh bandit1@bandit.labs.overthewire.org <span class="nt">-p</span> 2220
</code></pre></div></div> <p>Enter the password you obtained from the <code class="language-plaintext highlighter-rouge">readme</code> file when prompted.</p>]]></content><author><name></name></author><category term="Security"/><category term="OverTheWire"/><category term="Bandit"/><category term="CTF"/><category term="Security"/><category term="Linux"/><summary type="html"><![CDATA[Lvl 0 - cat readme]]></summary></entry><entry><title type="html">a post with advanced image components</title><link href="https://logan-james.github.io//blog/2024/advanced-images/" rel="alternate" type="text/html" title="a post with advanced image components"/><published>2024-01-27T11:46:00+00:00</published><updated>2024-01-27T11:46:00+00:00</updated><id>https://logan-james.github.io//blog/2024/advanced-images</id><content type="html" xml:base="https://logan-james.github.io//blog/2024/advanced-images/"><![CDATA[<p>This is an example post with advanced image components.</p> <h2 id="image-slider">Image Slider</h2> <p>This is a simple image slider. It uses the <a href="https://swiperjs.com/">Swiper</a> library. Check the <a href="https://swiperjs.com/demos">examples page</a> for more information of what you can achieve with it.</p> <swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <figure> <picture> <img src="/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <img src="/assets/img/8.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <img src="/assets/img/10.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <img src="/assets/img/12.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> </swiper-container> <h2 id="image-comparison-slider">Image Comparison Slider</h2> <p>This is a simple image comparison slider. It uses the <a href="https://img-comparison-slider.sneas.io/">img-comparison-slider</a> library. Check the <a href="https://img-comparison-slider.sneas.io/examples.html">examples page</a> for more information of what you can achieve with it.</p> <img-comparison-slider> <figure slot="first"> <picture> <img src="/assets/img/prof_pic.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure slot="second"> <picture> <img src="/assets/img/prof_pic_color.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </img-comparison-slider>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[this is what advanced image components could look like]]></summary></entry><entry><title type="html">a post with geojson</title><link href="https://logan-james.github.io//blog/2024/geojson-map/" rel="alternate" type="text/html" title="a post with geojson"/><published>2024-01-26T17:57:00+00:00</published><updated>2024-01-26T17:57:00+00:00</updated><id>https://logan-james.github.io//blog/2024/geojson-map</id><content type="html" xml:base="https://logan-james.github.io//blog/2024/geojson-map/"><![CDATA[<p>This is an example post with some <a href="https://geojson.org/">geojson</a> code. The support is provided thanks to <a href="https://leafletjs.com/">Leaflet</a>. To create your own visualization, go to <a href="https://geojson.io/">geojson.io</a>.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">geojson
</span><span class="sb">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [
            [
              -60.11363029935569,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -2.904625022183211
            ]
          ]
        ],
        "type": "Polygon"
      }
    }
  ]
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-geojson">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [
            [
              -60.11363029935569,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -2.904625022183211
            ]
          ]
        ],
        "type": "Polygon"
      }
    }
  ]
}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><category term="maps"/><summary type="html"><![CDATA[this is what included geojson code could look like]]></summary></entry><entry><title type="html">a post with echarts</title><link href="https://logan-james.github.io//blog/2024/echarts/" rel="alternate" type="text/html" title="a post with echarts"/><published>2024-01-26T16:03:00+00:00</published><updated>2024-01-26T16:03:00+00:00</updated><id>https://logan-james.github.io//blog/2024/echarts</id><content type="html" xml:base="https://logan-james.github.io//blog/2024/echarts/"><![CDATA[<p>This is an example post with some <a href="https://echarts.apache.org/">echarts</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">echarts
</span><span class="sb">{
  "title": {
    "text": "ECharts Getting Started Example"
  },
  "responsive": true,
  "tooltip": {},
  "legend": {
    "top": "30px",
    "data": ["sales"]
  },
  "xAxis": {
    "data": ["Shirts", "Cardigans", "Chiffons", "Pants", "Heels", "Socks"]
  },
  "yAxis": {},
  "series": [
    {
      "name": "sales",
      "type": "bar",
      "data": [5, 20, 36, 10, 10, 20]
    }
  ]
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-echarts">{
  "title": {
    "text": "ECharts Getting Started Example"
  },
  "responsive": true,
  "tooltip": {},
  "legend": {
    "top": "30px",
    "data": ["sales"]
  },
  "xAxis": {
    "data": ["Shirts", "Cardigans", "Chiffons", "Pants", "Heels", "Socks"]
  },
  "yAxis": {},
  "series": [
    {
      "name": "sales",
      "type": "bar",
      "data": [5, 20, 36, 10, 10, 20]
    }
  ]
}
</code></pre> <p>Note that this library offer support for both light and dark themes. You can switch between them using the theme switcher in the top right corner of the page.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included echarts code could look like]]></summary></entry><entry><title type="html">a post with chart.js</title><link href="https://logan-james.github.io//blog/2024/chartjs/" rel="alternate" type="text/html" title="a post with chart.js"/><published>2024-01-26T01:04:00+00:00</published><updated>2024-01-26T01:04:00+00:00</updated><id>https://logan-james.github.io//blog/2024/chartjs</id><content type="html" xml:base="https://logan-james.github.io//blog/2024/chartjs/"><![CDATA[<p>This is an example post with some <a href="https://www.chartjs.org/">chart.js</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">chartjs
</span><span class="sb">{
  "type": "line",
  "data": {
    "labels": [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July"
    ],
    "datasets": [
      {
        "label": "# of bugs",
        "fill": false,
        "lineTension": 0.1,
        "backgroundColor": "rgba(75,192,192,0.4)",
        "borderColor": "rgba(75,192,192,1)",
        "borderCapStyle": "butt",
        "borderDash": [],
        "borderDashOffset": 0,
        "borderJoinStyle": "miter",
        "pointBorderColor": "rgba(75,192,192,1)",
        "pointBackgroundColor": "#fff",
        "pointBorderWidth": 1,
        "pointHoverRadius": 5,
        "pointHoverBackgroundColor": "rgba(75,192,192,1)",
        "pointHoverBorderColor": "rgba(220,220,220,1)",
        "pointHoverBorderWidth": 2,
        "pointRadius": 1,
        "pointHitRadius": 10,
        "data": [
          65,
          59,
          80,
          81,
          56,
          55,
          40
        ],
        "spanGaps": false
      }
    ]
  },
  "options": {}
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>This is how it looks like:</p> <pre><code class="language-chartjs">{
  "type": "line",
  "data": {
    "labels": [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July"
    ],
    "datasets": [
      {
        "label": "# of bugs",
        "fill": false,
        "lineTension": 0.1,
        "backgroundColor": "rgba(75,192,192,0.4)",
        "borderColor": "rgba(75,192,192,1)",
        "borderCapStyle": "butt",
        "borderDash": [],
        "borderDashOffset": 0,
        "borderJoinStyle": "miter",
        "pointBorderColor": "rgba(75,192,192,1)",
        "pointBackgroundColor": "#fff",
        "pointBorderWidth": 1,
        "pointHoverRadius": 5,
        "pointHoverBackgroundColor": "rgba(75,192,192,1)",
        "pointHoverBorderColor": "rgba(220,220,220,1)",
        "pointHoverBorderWidth": 2,
        "pointRadius": 1,
        "pointHitRadius": 10,
        "data": [
          65,
          59,
          80,
          81,
          56,
          55,
          40
        ],
        "spanGaps": false
      }
    ]
  },
  "options": {}
}
</code></pre> <p>Also another example chart.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">chartjs
</span><span class="sb">{
  "type": "doughnut",
  "data": {
    "labels": [
      "Red",
      "Blue",
      "Yellow"
    ],
    "datasets": [
      {
        "data": [
          300,
          50,
          100
        ],
        "backgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ],
        "hoverBackgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ]
      }
    ]
  },
  "options": {}
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-chartjs">{
  "type": "doughnut",
  "data": {
    "labels": [
      "Red",
      "Blue",
      "Yellow"
    ],
    "datasets": [
      {
        "data": [
          300,
          50,
          100
        ],
        "backgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ],
        "hoverBackgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ]
      }
    ]
  },
  "options": {}
}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included chart.js code could look like]]></summary></entry><entry><title type="html">a post with TikZJax</title><link href="https://logan-james.github.io//blog/2023/tikzjax/" rel="alternate" type="text/html" title="a post with TikZJax"/><published>2023-12-12T22:25:00+00:00</published><updated>2023-12-12T22:25:00+00:00</updated><id>https://logan-james.github.io//blog/2023/tikzjax</id><content type="html" xml:base="https://logan-james.github.io//blog/2023/tikzjax/"><![CDATA[<p>This is an example post with TikZ code. TikZJax converts script tags (containing TikZ code) into SVGs.</p> <script type="text/tikz">
\begin{tikzpicture}
    \draw[red,fill=black!60!red] (0,0) circle [radius=1.5];
    \draw[green,fill=black!60!green] (0,0) circle [x radius=1.5cm, y radius=10mm];
    \draw[blue,fill=black!60!blue] (0,0) circle [x radius=1cm, y radius=5mm, rotate=30];
\end{tikzpicture}
</script>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="diagrams"/><summary type="html"><![CDATA[this is what included TikZ code could look like]]></summary></entry><entry><title type="html">a post with jupyter notebook</title><link href="https://logan-james.github.io//blog/2023/jupyter-notebook/" rel="alternate" type="text/html" title="a post with jupyter notebook"/><published>2023-07-04T12:57:00+00:00</published><updated>2023-07-04T12:57:00+00:00</updated><id>https://logan-james.github.io//blog/2023/jupyter-notebook</id><content type="html" xml:base="https://logan-james.github.io//blog/2023/jupyter-notebook/"><![CDATA[<p>To include a jupyter notebook in a post, you can use the following code:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{::nomarkdown}
<span class="cp">{%</span><span class="w"> </span><span class="nt">assign</span><span class="w"> </span><span class="nv">jupyter_path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'assets/jupyter/blog.ipynb'</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="nf">relative_url</span><span class="w"> </span><span class="cp">%}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">capture</span><span class="w"> </span><span class="nv">notebook_exists</span><span class="w"> </span><span class="cp">%}{%</span><span class="w"> </span><span class="nt">file_exists</span><span class="w"> </span>assets/jupyter/blog.ipynb<span class="w"> </span><span class="cp">%}{%</span><span class="w"> </span><span class="nt">endcapture</span><span class="w"> </span><span class="cp">%}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">if</span><span class="w"> </span><span class="nv">notebook_exists</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s1">'true'</span><span class="w"> </span><span class="cp">%}</span>
  <span class="cp">{%</span><span class="w"> </span><span class="nt">jupyter_notebook</span><span class="w"> </span><span class="nv">jupyter_path</span><span class="w"> </span><span class="cp">%}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">else</span><span class="w"> </span><span class="cp">%}</span>
  &lt;p&gt;Sorry, the notebook you are looking for does not exist.&lt;/p&gt;
<span class="cp">{%</span><span class="w"> </span><span class="nt">endif</span><span class="w"> </span><span class="cp">%}</span>
{:/nomarkdown}
</code></pre></div></div> <p>Let’s break it down: this is possible thanks to <a href="https://github.com/red-data-tools/jekyll-jupyter-notebook">Jekyll Jupyter Notebook plugin</a> that allows you to embed jupyter notebooks in your posts. It basically calls <a href="https://nbconvert.readthedocs.io/en/latest/usage.html#convert-html"><code class="language-plaintext highlighter-rouge">jupyter nbconvert --to html</code></a> to convert the notebook to an html page and then includes it in the post. Since <a href="https://jekyllrb.com/docs/configuration/markdown/">Kramdown</a> is the default Markdown renderer for Jekyll, we need to surround the call to the plugin with the <a href="https://kramdown.gettalong.org/syntax.html#extensions">::nomarkdown</a> tag so that it stops processing this part with Kramdown and outputs the content as-is.</p> <p>The plugin takes as input the path to the notebook, but it assumes the file exists. If you want to check if the file exists before calling the plugin, you can use the <code class="language-plaintext highlighter-rouge">file_exists</code> filter. This avoids getting a 404 error from the plugin and ending up displaying the main page inside of it instead. If the file does not exist, you can output a message to the user. The code displayed above outputs the following:</p> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/blog.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div> <p>Note that the jupyter notebook supports both light and dark themes.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="jupyter"/><summary type="html"><![CDATA[an example of a blog post with jupyter notebook]]></summary></entry><entry><title type="html">a post with custom blockquotes</title><link href="https://logan-james.github.io//blog/2023/custom-blockquotes/" rel="alternate" type="text/html" title="a post with custom blockquotes"/><published>2023-05-12T19:53:00+00:00</published><updated>2023-05-12T19:53:00+00:00</updated><id>https://logan-james.github.io//blog/2023/custom-blockquotes</id><content type="html" xml:base="https://logan-james.github.io//blog/2023/custom-blockquotes/"><![CDATA[<p>This post shows how to add custom styles for blockquotes. Based on <a href="https://github.com/sighingnow/jekyll-gitbook">jekyll-gitbook</a> implementation.</p> <p>We decided to support the same custom blockquotes as in <a href="https://sighingnow.github.io/jekyll-gitbook/jekyll/2022-06-30-tips_warnings_dangers.html">jekyll-gitbook</a>, which are also found in a lot of other sites’ styles. The styles definitions can be found on the <a href="https://github.com/alshedivat/al-folio/blob/master/_sass/_base.scss">_base.scss</a> file, more specifically:</p> <div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/* Tips, warnings, and dangers */</span>
<span class="nc">.post</span> <span class="nc">.post-content</span> <span class="nt">blockquote</span> <span class="p">{</span>
  <span class="k">&amp;</span><span class="nc">.block-tip</span> <span class="p">{</span>
    <span class="nl">border-color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-tip-block</span><span class="p">);</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-tip-block-bg</span><span class="p">);</span>

    <span class="nt">p</span> <span class="p">{</span>
      <span class="nl">color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-tip-block-text</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="nt">h1</span><span class="o">,</span>
    <span class="nt">h2</span><span class="o">,</span>
    <span class="nt">h3</span><span class="o">,</span>
    <span class="nt">h4</span><span class="o">,</span>
    <span class="nt">h5</span><span class="o">,</span>
    <span class="nt">h6</span> <span class="p">{</span>
      <span class="nl">color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-tip-block-title</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="k">&amp;</span><span class="nc">.block-warning</span> <span class="p">{</span>
    <span class="nl">border-color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-warning-block</span><span class="p">);</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-warning-block-bg</span><span class="p">);</span>

    <span class="nt">p</span> <span class="p">{</span>
      <span class="nl">color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-warning-block-text</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="nt">h1</span><span class="o">,</span>
    <span class="nt">h2</span><span class="o">,</span>
    <span class="nt">h3</span><span class="o">,</span>
    <span class="nt">h4</span><span class="o">,</span>
    <span class="nt">h5</span><span class="o">,</span>
    <span class="nt">h6</span> <span class="p">{</span>
      <span class="nl">color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-warning-block-title</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="k">&amp;</span><span class="nc">.block-danger</span> <span class="p">{</span>
    <span class="nl">border-color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-danger-block</span><span class="p">);</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-danger-block-bg</span><span class="p">);</span>

    <span class="nt">p</span> <span class="p">{</span>
      <span class="nl">color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-danger-block-text</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="nt">h1</span><span class="o">,</span>
    <span class="nt">h2</span><span class="o">,</span>
    <span class="nt">h3</span><span class="o">,</span>
    <span class="nt">h4</span><span class="o">,</span>
    <span class="nt">h5</span><span class="o">,</span>
    <span class="nt">h6</span> <span class="p">{</span>
      <span class="nl">color</span><span class="p">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">global-danger-block-title</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div> <p>A regular blockquote can be used as following:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gt">&gt; This is a regular blockquote</span>
<span class="gt">&gt; and it can be used as usual</span>
</code></pre></div></div> <blockquote> <p>This is a regular blockquote and it can be used as usual</p> </blockquote> <p>These custom styles can be used by adding the specific class to the blockquote, as follows:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gt">&gt; ##### TIP</span>
<span class="gt">&gt;</span>
<span class="gt">&gt; A tip can be used when you want to give advice</span>
<span class="gt">&gt; related to a certain content.</span>
{: .block-tip }
</code></pre></div></div> <blockquote class="block-tip"> <h5 id="tip">TIP</h5> <p>A tip can be used when you want to give advice related to a certain content.</p> </blockquote> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gt">&gt; ##### WARNING</span>
<span class="gt">&gt;</span>
<span class="gt">&gt; This is a warning, and thus should</span>
<span class="gt">&gt; be used when you want to warn the user</span>
{: .block-warning }
</code></pre></div></div> <blockquote class="block-warning"> <h5 id="warning">WARNING</h5> <p>This is a warning, and thus should be used when you want to warn the user</p> </blockquote> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gt">&gt; ##### DANGER</span>
<span class="gt">&gt;</span>
<span class="gt">&gt; This is a danger zone, and thus should</span>
<span class="gt">&gt; be used carefully</span>
{: .block-danger }
</code></pre></div></div> <blockquote class="block-danger"> <h5 id="danger">DANGER</h5> <p>This is a danger zone, and thus should be used carefully</p> </blockquote> ]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="blockquotes"/><summary type="html"><![CDATA[an example of a blog post with custom blockquotes]]></summary></entry></feed>