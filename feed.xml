<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://logan-james.github.io//feed.xml" rel="self" type="application/atom+xml"/><link href="https://logan-james.github.io//" rel="alternate" type="text/html" hreflang="en"/><updated>2024-04-30T02:48:51+00:00</updated><id>https://logan-james.github.io//feed.xml</id><title type="html">blank</title><subtitle>Logan James&apos;s homepage. </subtitle><entry><title type="html">OverTheWire Bandit 0</title><link href="https://logan-james.github.io//blog/2024/OTWb0/" rel="alternate" type="text/html" title="OverTheWire Bandit 0"/><published>2024-02-22T00:00:00+00:00</published><updated>2024-02-22T00:00:00+00:00</updated><id>https://logan-james.github.io//blog/2024/OTWb0</id><content type="html" xml:base="https://logan-james.github.io//blog/2024/OTWb0/"><![CDATA[ <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/overthewirelogo.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="introduction-to-ssh">Introduction to SSH</h2> <p>Secure Shell (SSH) is an encrypted protocol used to connect to remote servers securely. The fundamental benefit of SSH is its robust security, which includes encryption to prevent sensitive data from being exposed to network traffic analysis.</p> \[\text{SSH Encryption Formula: } E_K(M) = C\] <p>Where:</p> <ul> <li>(E_K) is the encryption function</li> <li>(M) is the plain message</li> <li>(C) is the ciphered message</li> <li>(K) is the secret key</li> </ul> <hr/> <h2 id="accessing-bandit-level-0">Accessing Bandit Level 0</h2> <p>The primary task in Bandit Level 0 is to connect to the Bandit game server using SSH. This introductory level is designed to teach the basics of making an SSH connection. Here’s how you can connect:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh bandit0@bandit.labs.overthewire.org <span class="nt">-p</span> 2220
</code></pre></div></div> <p>This command initiates an <em>SSH</em> connection to <a href="https://overthewire.org/wargames/bandit/">bandit.labs.overthewire.org</a> on port 2220, logging in as the user <code class="language-plaintext highlighter-rouge">bandit0</code>.</p> <hr/> <h2 id="secure-shell-overview">Secure Shell Overview</h2> <p>Secure Shell (SSH) is a cornerstone of secure network operations, ensuring encrypted communications between devices. For in-depth technical details, refer to the original SSH RFCs, like RFC 4253, which outline the protocol’s architecture and operation mechanisms.</p> <p>Secure Shell (SSH) is a cryptographic network protocol designed for secure communication over an unsecured network. It is widely used by network administrators to control web and other types of servers remotely. SSH provides a secure channel over an insecure network by using a client-server model, connecting an SSH client application with an SSH server. The protocol specifies how to encrypt the data being sent, ensuring that both the identity of the client and the integrity of the data are protected from unauthorized access or interception. Notably, SSH uses public-key cryptography to authenticate the remote computer and allow the remote computer to authenticate the user, if necessary. This feature distinguishes SSH from other remote administration tools, such as Telnet, which transmit passwords in plaintext and are vulnerable to interception.</p> <hr/> <h2 id="key-components-of-ssh">Key Components of SSH</h2> <p>Understanding the fundamental components of Secure Shell (SSH) is essential for leveraging its capabilities effectively. This section delves into the key elements that constitute SSH and how they contribute to its robust security model.</p> <p>At its core, SSH relies on cryptographic principles to establish secure communication channels over potentially insecure networks. One of the primary components of SSH is its encryption mechanism, which ensures that data transmitted between the client and server remains confidential and tamper-proof. By encrypting data, SSH protects sensitive information from unauthorized access or interception by malicious actors.</p> <p>Another crucial aspect of SSH is its authentication framework, which provides a means of verifying the identities of both the client and the server. Unlike traditional methods like Telnet<d-footnote>Telnet was exploited by attackers intercepting and capturing plaintext passwords transmitted over the network In 2000s worm known as "Lion" targeted this vulnerability.</d-footnote>, which rely on plaintext passwords, SSH employs public-key cryptography for authentication. This method significantly enhances security by eliminating the risk of password interception and brute-force attacks.</p> <p>Furthermore, SSH operates within a client-server architecture, where the SSH client initiates a connection with the SSH server. This model facilitates remote administration and enables administrators to securely access and manage servers from remote locations.</p> <p>In addition to encryption and authentication, SSH also incorporates mechanisms for session multiplexing and port forwarding, enhancing its versatility and utility in various network environments. These features allow users to establish multiple secure connections over a single SSH session and securely tunnel traffic between different network endpoints.</p> <p>By integrating these key components, SSH establishes a robust framework for secure remote communication and administration, making it an indispensable tool for network administrators and IT professionals alike.</p> <hr/> <h2 id="generating-ssh-key-pair">Generating SSH Key Pair</h2> <p>To further your understanding of SSH, here’s an example of how to generate a public/private key pair, which is a critical part of SSH’s secure authentication process:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh-keygen <span class="nt">-t</span> rsa <span class="nt">-b</span> 4096 <span class="nt">-C</span> <span class="s2">"your_email@example.com"</span>
</code></pre></div></div> <p>This command generates a new RSA key pair, which enhances security by using a 4096-bit key size.</p> <hr/> <h2 id="harnessing-the-power-of-ssh-commands">Harnessing the Power of SSH Commands</h2> <p>SSH not only secures communications but also supports a range of commands that facilitate remote system management. Below are some common SSH commands and their uses:</p> <ul> <li><strong><code class="language-plaintext highlighter-rouge">ssh</code></strong>: Connect to a remote host.</li> <li><strong><code class="language-plaintext highlighter-rouge">ssh-copy-id</code></strong>: Install your public key in a remote machine’s <code class="language-plaintext highlighter-rouge">authorized_keys</code>.</li> <li><strong><code class="language-plaintext highlighter-rouge">ssh-add</code></strong>: Add private key identities to the authentication agent.</li> <li><strong><code class="language-plaintext highlighter-rouge">sftp</code></strong>: Secure file transfer program.</li> <li><strong><code class="language-plaintext highlighter-rouge">scp</code></strong>: Secure copy (remote file copy program).</li> </ul> <blockquote> <p>“SSH is pivotal in today’s digital security landscape, providing the backbone for secure remote operations.” — Jane Doe, Cybersecurity Expert</p> </blockquote> <hr/> <h2 id="ssh-operations">SSH Operations</h2> <p>SSH offers a plethora of functionalities beyond secure communication. Here’s a breakdown of essential SSH commands and their purposes:</p> <figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="c"># Generating SSH Key Pair</span>

ssh-keygen <span class="nt">-t</span> rsa <span class="nt">-b</span> 4096 <span class="nt">-C</span> <span class="s2">"your_email@example.com"</span>

<span class="c"># Connecting to a Remote Host</span>

ssh username@hostname

<span class="c"># Copying Public Key to Remote Machine</span>

ssh-copy-id username@hostname

<span class="c"># Adding Private Key to SSH Agent</span>

ssh-add ~/.ssh/id_rsa

<span class="c"># Using Secure FIle Transfer (SFTP)</span>

sftp username@hostname

<span class="c"># Securely Copying Files (SCP)</span>

scp file.txt username@hostname:/remote/directory</code></pre></figure> <details><summary>Click here to know more</summary> <ul> <li><strong>Generating SSH Key Pair</strong> This command generates a new RSA key pair with a specified bit length, enhancing security for authentication purposes. The -t flag specifies the key type (RSA), -b sets the key length to 4096 bits, and -C adds a comment to the key, typically an email address.</li> <li><strong>Connecting to a Remote Host</strong> Use this command to establish a secure shell connection to a remote host. Replace username with your username on the remote machine and hostname with the IP address or domain name of the host.</li> <li><strong>Copying Public Key to Remote Machine</strong> This command copies your public SSH key to the authorized_keys file on a remote machine, allowing you to authenticate without a password. It simplifies the process of setting up passwordless SSH access.</li> <li><strong>Adding Private Key to SSH Agent</strong> The SSH agent stores private keys used for authentication, eliminating the need to enter passwords for every SSH connection. This command adds the specified private key to the SSH agent, enabling seamless authentication.</li> <li><strong>Using Secure File Transfer (SFTP)</strong> SFTP provides a secure method for transferring files between local and remote systems. It operates over the SSH protocol, ensuring data confidentiality and integrity during file transfer.</li> <li><strong>Securely Copying Files (SCP)</strong> SCP securely copies files between hosts over an SSH connection. Simply specify the file to copy (file.txt), the remote username, hostname, and destination directory on the remote machine.</li> </ul> <hr/> <p><em>These commands empower you to efficiently manage remote systems and securely transfer files, bolstering your proficiency in SSH operations.</em></p> </details>]]></content><author><name></name></author><category term="Security"/><category term="OverTheWire"/><category term="Bandit"/><category term="CTF"/><category term="Security"/><category term="Linux"/><summary type="html"><![CDATA[Lvl 0 - SSH]]></summary></entry><entry><title type="html">OverTheWire Bandit 0 → Level 1</title><link href="https://logan-james.github.io//blog/2024/OTWb0-1/" rel="alternate" type="text/html" title="OverTheWire Bandit 0 → Level 1"/><published>2024-02-22T00:00:00+00:00</published><updated>2024-02-22T00:00:00+00:00</updated><id>https://logan-james.github.io//blog/2024/OTWb0-1</id><content type="html" xml:base="https://logan-james.github.io//blog/2024/OTWb0-1/"><![CDATA[<div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/OverTheWirelvl1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Terminal logo you'll see </div> <p>Welcome to the OverTheWire Bandit series! In this walkthrough, we’ll guide you through solving Level 0 and progressing to Level 1. Let’s dive in! <a href="https://overthewire.org/wargames/bandit/bandit1.html">OverTheWire - Bandit</a></p> <h2 id="level-goal">Level Goal</h2> <p>The goal of Bandit Level 0 is to find the password for Level 1, which is stored in a file named <code class="language-plaintext highlighter-rouge">readme</code> located in the home directory.</p> <h2 id="commands-for-this-level">Commands for This Level</h2> <ul> <li><a href="https://man7.org/linux/man-pages/man1/ls.1.html">ls</a> list directory contents</li> <li><a href="https://man7.org/linux/man-pages/man1/cd.1p.html">cd</a> change the working directory</li> <li><a href="https://man7.org/linux/man-pages/man1/cat.1.html">cat</a> concatenate files and print on the standard output</li> <li><a href="https://man7.org/linux/man-pages/man1/file.1.html">file</a> determine file type</li> <li><a href="https://man7.org/linux/man-pages/man1/du.1.htmlu">du</a> estimate file space usage</li> <li><a href="https://man7.org/linux/man-pages/man1/find.1.html">find</a> search for files in a directory hierarchy</li> </ul> <h2 id="connecting-to-bandit0">Connecting to Bandit0</h2> <p>First, let’s connect to the Bandit Level 0 server using SSH. Open your terminal and run the following command:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh bandit0@bandit.labs.overthewire.org <span class="nt">-p</span> 2220
</code></pre></div></div> <p>You will be prompted to enter the password for Level 0, which is also <code class="language-plaintext highlighter-rouge">bandit0</code>.</p> <h2 id="locating-the-readme-file">Locating the Readme File</h2> <p>Once logged in, you’ll find yourself in the home directory (<code class="language-plaintext highlighter-rouge">/home/bandit0</code>). Let’s list the files in the directory using the <code class="language-plaintext highlighter-rouge">ls</code> command:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">ls</span>
</code></pre></div></div> <p>You should see <code class="language-plaintext highlighter-rouge">readme</code>.</p> <h2 id="reading-the-readme-file">Reading the readme file</h2> <p>To view the contents of the <code class="language-plaintext highlighter-rouge">readme</code> file, use the <code class="language-plaintext highlighter-rouge">cat</code> command.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat </span>readme
</code></pre></div></div> <p>This will display the password for Level 1 on the terminal.</p> <h2 id="ssh-into-bandit1">SSH into Bandit1</h2> <p>Now you have the pw for Level 1, <strong>ssh</strong> into the next level.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh bandit1@bandit.labs.overthewire.org <span class="nt">-p</span> 2220
</code></pre></div></div> <p>Enter the password you obtained from the <code class="language-plaintext highlighter-rouge">readme</code> file when prompted.</p>]]></content><author><name></name></author><category term="Security"/><category term="OverTheWire"/><category term="Bandit"/><category term="CTF"/><category term="Security"/><category term="Linux"/><summary type="html"><![CDATA[Lvl 0 - cat readme]]></summary></entry><entry><title type="html">Cisco Packet Tracer</title><link href="https://logan-james.github.io//blog/2023/ciscoPT/" rel="alternate" type="text/html" title="Cisco Packet Tracer"/><published>2023-07-04T17:39:00+00:00</published><updated>2023-07-04T17:39:00+00:00</updated><id>https://logan-james.github.io//blog/2023/ciscoPT</id><content type="html" xml:base="https://logan-james.github.io//blog/2023/ciscoPT/"><![CDATA[<h1 id="understanding-cisco-packet-tracer-a-comprehensive-guide">Understanding Cisco Packet Tracer: A Comprehensive Guide</h1> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/ciscoPT.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/CPT.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><em>Cisco Packet Tracer</em> is a versatile network simulation tool used extensively in educational environments to help students learn networking concepts and develop IT skills. This powerful tool, developed by Cisco Systems, allows users to simulate the configuration of Cisco routers and switches using a command-line interface similar to that found on real devices. Here’s everything you need to know about Cisco Packet Tracer, from its features to how to maximize its use for learning and designing networks. What is Cisco Packet Tracer?</p> <p><em>Cisco Packet Tracer</em> is a network simulation software that enables users to create network topologies and imitate modern computer networks. The software allows for visualization of how data packets move through a network, helping users understand and troubleshoot configurations. It is an essential tool for Cisco Networking Academy students and is widely used for network certification training.</p> <h2 id="key-features-of-cisco-packet-tracer">Key Features of Cisco Packet Tracer</h2> <ul> <li>Network Simulation: Users can design complex network topologies to understand how networks operate in real scenarios without the need for physical hardware.</li> <li>Interactive Environment: Packet Tracer provides an interactive simulation environment where changes to the network configuration reflect immediately.</li> <li>Visual Learning: The software visually demonstrates how data packets flow through a network, identifying where issues may occur.</li> <li>Wide Range of Devices: It includes various network devices such as routers, switches, and firewalls, along with end-user devices like computers and smartphones.</li> <li>Teaching and Learning Tool: It supports a range of teaching and learning opportunities, from individual practice to instructor-led demonstrations.</li> </ul> <h2 id="educational-benefits-of-cisco-packet-tracer">Educational Benefits of Cisco Packet Tracer</h2> <ol> <li> <p><strong><em>Practical Experience</em></strong> Packet Tracer offers a hands-on learning experience without the need for expensive network hardware. It’s an ideal tool for students to gain practical knowledge in a controlled, replicable environment.</p> </li> <li><strong><em>Enhanced Understanding</em></strong> By allowing students to experiment with network behavior, Packet Tracer helps them understand theoretical concepts in a tangible way. This application strengthens learning and retention.</li> <li><strong><em>Preparation for Certifications</em></strong> For those preparing for Cisco certifications like CCNA, CCNP, and others, Packet Tracer provides a platform to practice scenarios that are likely to be encountered in the actual exams.</li> </ol> <p><strong><em>How to Get Started with Cisco Packet Tracer</em></strong></p> <h2 id="to-begin-using-cisco-packet-tracer-follow-these-steps">To begin using Cisco Packet Tracer, follow these steps:</h2> <ul> <li><strong><em>Download and Install:</em></strong> The software is available for free to Cisco Networking Academy students. Register at the Cisco NetAcad website and download the software.</li> <li><strong><em>Explore Tutorials and Resources:</em></strong> Cisco provides various tutorials and resources to help you get started and make the most out of your learning experience.</li> <li><strong><em>Practice Building Networks:</em></strong> Start by creating simple networks and gradually increase complexity as you become more familiar with the tool.</li> </ul> <h2 id="tips-for-using-cisco-packet-tracer">Tips for Using Cisco Packet Tracer</h2> <ul> <li><strong><em>Use Logical Workspace:</em></strong> Organize your network simulation logically to make it easier to understand and manage.</li> <li><strong><em>Utilize Built-in Protocols and Features:</em></strong> Experiment with different protocols and features available within the tool to learn their impact on network behavior.</li> <li><strong><em>Regular Practice:</em></strong> Regularly practicing with Packet Tracer will improve your proficiency in network design and troubleshooting.</li> </ul> <h2 id="conclusion">Conclusion</h2> <p><em>Cisco Packet Tracer</em> is an invaluable tool for anyone interested in learning about network management and configuration. Whether you’re a student, a teacher, or a professional looking to enhance your skills, Packet Tracer provides a robust platform for understanding and designing computer networks. Embrace this tool to build your knowledge and advance your career in networking.</p> <p><em>Cisco Packet Tracer</em> continues to be a cornerstone in the field of network education, combining detailed simulations with a user-friendly interface to facilitate a deeper understanding of network concepts and operations.</p>]]></content><author><name></name></author><category term="cisco"/><category term="networking"/><summary type="html"><![CDATA[an example of a blog post with diagrams]]></summary></entry></feed>